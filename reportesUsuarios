<!DOCTYPE html>
<html lang="es">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Administración de Reportes de Usuarios</title>
        <link rel="stylesheet" href="styles.css">
        <style>
            body {
                font-family: Arial, sans-serif;
            }
            table {
                width: 100%;
                border-collapse: collapse;
            }
            th, td {
                border: 1px solid #ddd;
                padding: 8px;
                text-align: left;
            }
            th {
                background-color: #f2f2f2;
            }
            tr:hover {
                background-color: #f5f5f5;
            }
            .btn-editar, .btn-eliminar {
                background-color: #4CAF50;
                color: white;
                padding: 5px 10px;
                border: none;
                cursor: pointer;
                text-align: center;
                display: inline-block;
                font-size: 14px;
                margin: 2px 2px;
                transition: 0.3s;
            }
            .btn-editar:hover, .btn-eliminar:hover {
                background-color: #45a049;
            }
        </style>
    </head>
    <body>
        <h1>Administración de reportes</h1>
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Usuario</th>
                    <th>Reporte</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="reportes">
                <!-- Los reportes se agregarán aquí -->
            </tbody>
        </table>
        <button id="btn-nuevo">Nuevo reporte</button>
        <script>
            // Mock de datos
            const reportes = [
                {id: 1, usuario: 'user1', reporte: 'Reporte 1'},
                {id: 2, usuario: 'user2', reporte: 'Reporte 2'},
                {id: 3, usuario: 'user3', reporte: 'Reporte 3'}];

            // Función para renderizar los reportes
            function renderizarReportes() {
                const tbody = document.getElementById('reportes');
                tbody.innerHTML = '';
                reportes.forEach(reporte => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${reporte.id}</td>
                        <td>${reporte.usuario}</td>
                        <td>${reporte.reporte}</td>
                        <td>
                            <button class="btn-editar">Editar</button>
                            <button class="btn-eliminar">Eliminar</button>
                        </td>
                    `;
                    tbody.appendChild(tr);
                });
            }

            // Agregar evento al botón "Nuevo reporte"
            const btnNuevo = document.getElementById('btn-nuevo');
            btnNuevo.addEventListener('click', () => {
                // Lógica para crear un nuevo reporte
            });

            // Renderizar los reportes al cargar la página
            renderizarReportes();
        </script>
    </body>
</html>

<!--Este ejemplo proporciona una estructura básica para administrar reportes de 
usuarios. falta personalizar el diseño y la funcionalidad según las necesidades.
Además, se puede reemplazar el mock de datos con una API o un almacenamiento local.-->
